	AREA project, CODE, READONLY
		ENTRY
		
main
	LDR r0,=Matrix_data	;Load matrix
	LDR r1,Result_data	;Inverse matrix
	LDR sp,=0x40000		;Stack Pointer
	LDR r2,[r0],#4		;Save Size N
	MOV r3,#0			;Initialize
	MOV r4,#0
	
Identity
	MOV r5,#0x3F800000	;1
	MOV r6,#0x00000000	;0
	
	CMP r3,r4			;Compare
	STREQ r5,[r1],#4	;r3 == r4, Store 1
	STRNE r6,[r1],#4	;r3 != r4, Store 0
	ADD r3,#1			;r3++
	
	CMP r2,r3			;Compare
	MOVEQ r3,#0			;r2 == r3, r3 = 0
	ADDEQ r4,#1			;r4++
	CMP r2,r4			;Compare
	BEQ Iden_fin		;Finish
	B Identity			;Replay
	
Iden_fin				;Initialize
	LDR r1,Result_data
	MOV r3,#0
	MOV r4,#0
	MOV r5,r2,LSL #2
	SUB r10,r2,#1
	
Row_exchange
	;Only one time
	CMP r4,#1					;Compare
	BEQ Row_exchange_Fin		;Finish condition

	LDR r6,[r0]					;Load number
	ADD r4,#1					;Add for finish condition
	CMP r6,#0x00000000			;if r6 == 0
	SUBEQ r4,#1					;r4 = r4 - 1
	BEQ Row_exchange_column0	;Row exchange
	BNE Row_exchange			;Restart
	
Row_exchange_column0
	;Row exchange
	SUB r11,r3,r4				;Adjust value to get right value
	MOV r11,r11,LSL #2
	ADD r5,r11					;Adjust value to get right value
	LDR r6,[r0,r11]				;Find value
	LDR r7,[r0,r5]				;Find value
	
	STR r6,[r0,r5]				;Exchange
	STR r7,[r0,r11]				;Exchange
	SUB r5,r3,LSL #2			;Initialize
	ADD r5,r4,LSL #2			;Initialize
	ADD r3,#1					;r3++
	CMP r3,r2					;Compare for finish condition
	BNE Row_exchange_column0	;Restart
	MOVEQ r3,#0					;Initialize
	BEQ Row_exchange_column1	;Go next
	
Row_exchange_column1
	ADD r5,r3,LSL #2			;Adjust value to get right value
	LDR r6,[r1,r3,LSL #2]		;Find value
	LDR r7,[r1,r5]				;Find value
	STR r6,[r1,r5]				;Exchange
	STR r7,[r1,r3,LSL #2]		;Exchange
	SUB r5,r3,LSL #2			;Initialize
	ADD r3,#1					;r3++
	CMP r3,r2					;Compare for finish condition
	BNE Row_exchange_column1	;Restart
	MOVEQ r3,#0					;Initialize
	ADDEQ r4,#1
	BEQ Row_exchange			;Go before (loop)
	
Row_exchange_Fin		;Initialize
	LDR r0,=Matrix_data
	ADD r0,#4
	LDR r1,Result_data
	MOV r3,#0
	MOV r4,#1
	MOV r5,r2,LSL #2
	MOV r11,#1
	LDR r6,[r0]
	LDR r7,[r0,r5]
Next_Row
	CMP r11,r2		;Compare for finish condition
	BEQ Set_1		;Finish
	CMP r11,#1		;Change value for next 
	ADDNE r0,r5
	ADDNE r0,#4
	ADDNE r1,r5
	
Operate
	CMP r2,r4				;Compare for next row
	BEQ YM
	
	LDR r6,[r0]				;Load value
	LDR r7,[r0,r5]			;Load value
	STMEA sp,{r0-r11}		;Store registers
	MOV r0,r7				;Change
	MOV r1,r6				;Change
	CMP r0,#0x00000000		;Compare 0
	CMPNE r0,#0x80000000	;Compare 0
	MOVEQ r12,#0x00000000	;if 0, result = 0
	MOVNE lr,pc				;store load register
	BNE DIV_Set				;if not 0, go Div function
	LDMFD sp,{r0-r11}		;Load load register
	MOV r8,r12				;Result
	CMP r8,#0x00000000		;if 0
	ADDNE r8,#0x80000000	;if not 0, change sign bit
	ADD r4,#1				;r4++
	STMFD sp,{r4}			;store r4
	MOV r4, #0				;r4 = 0

Next_Column_R0				
	ADD r5,r4,LSL #2		;Initialize
	LDR r6,[r0,r4,LSL #2]	;Load value
	LDR r7,[r0,r5]
	STMEA sp,{r0-r11}		;Store registers
	MOV r0,r8				;Change
	MOV r1,r6				;Change
	MOV lr,pc
	B Multiplication		;Multiplication function
	LDMFD sp,{r0-r11}		;Load registers
	MOV r9,r12				;r9 = result
	
	STMEA sp,{r0-r11}		;Store registers
	MOV r0,r9
	MOV r1,r7
	MOV lr,pc
	B ADDSUB				;ADDSUB function
	LDMFD sp,{r0-r11}		;Load registers
	MOV r10,r12				;r10 = result
	STR r10,[r0,r5]			;Store r10 into address
	
	SUB r5,r4,LSL #2		;Initialize
	ADD r3,#1
	ADD r4,#1
	CMP r3,r2
	BNE Next_Column_R0		;If r2 != r3, Restart
	MOVEQ r4,#0				;Initialize
	BEQ Next_Column_R1		;If r2 == r3, Go next
	
Next_Column_R1
	ADD r5,r4,LSL #2		;Initialize
	LDR r6,[r1,r4,LSL #2]	;Load value
	LDR r7,[r1,r5]			;Load value
	STMEA sp,{r0-r11}		;Store registers
	MOV r0,r8
	MOV r1,r6
	MOV lr,pc
	B Multiplication		;Multiplication function
	LDMFD sp,{r0-r11}		;Load registers
	MOV r9,r12				;r9 = result
	
	STMEA sp,{r0-r11}		;Store registers
	MOV r0,r9
	MOV r1,r7
	MOV lr,pc
	B ADDSUB				;ADDSUB function
	LDMFD sp,{r0-r11}		;Load registers
	MOV r10,r12				;r10 =  result
	STR r10,[r1,r5]			;Store r10 into address
	
	SUB r5,r4,LSL #2		;Initialize
	ADD r4,#1
	CMP r4,r2
	BNE Next_Column_R1		;If r2 != r4, Restart
	BEQ N_Oper				;If r2 == r4, Finish
	
Set_1						;Initialize
	MOV r3,#0
	MOV r4,#1
	MOV r5,r2,LSL #2
	ADD r10,r2,#1
	LDR r0,=Matrix_data
	ADD r0,#4
	LDR r1,Result_data
	
Set_1_R0
	CMP r4,r10				;If r4 == r10, Finish
	BEQ Set_Fin
	
	CMP r4,#1				;Initialize
	ADDNE r0,r5
	ADDNE r0,#4
	ADDNE r1,r5

	LDR r6,[r0]				;Load value
	STMEA sp,{r0-r11}		;Store registers
	MOV r0,#0x3F800000		;1
	MOV r1,r6
	;CMP r0,#0x00000000		
	;CMPNE r0,#0x80000000
	;MOVEQ r12,#0x00000000
	MOV lr,pc
	B DIV_Set				;DIV_Set function
	LDMFD sp,{r0-r11}		;Load registers
	MOV r8,r12				;r8 = result
	MOV r9,#0x3F800000		;r9 = 1
	STR r9,[r0]				;Store 1
	MOV r11,r4				;r11 = r4
	MOV r7,#1
	B Set_Column_R0	
	
	
Set_Column_R1
	LDR r6,[r1,r3,LSL #2]		;Load value
	STMEA sp,{r0-r11}			;Store registers
	MOV r0,r8
	MOV r1,r6
	MOV lr,pc
	B Multiplication			;Multiplication function
	LDMFD sp,{r0-r11}			;Load registers
	MOV r9,r12					;r9 = result
	STR r9,[r1,r3,LSL #2]		;Store r9 into address
	
	ADD r3,#1					;Initialize
	CMP r3,r2
	BNE Set_Column_R1			;Restart
	MOVEQ r3,#0
	ADDEQ r4,#1
	BEQ Set_1_R0				;Go back (loop)
Set_Fin						;Initialize
	MOV r3,#0
	MOV r4,#1
	MOV r11,r2
	LDR r6,[r0]
	LDR r7,[r0,-r5]
	
Next_Row2
	CMP r11,#1				;Compare
	BEQ Program_Finish		;If r11 == 1, Finish condition
	CMP r11,r2				;Initialize
	SUBNE r0,r5
	SUBNE r0,#4
	SUBNE r1,r5
	
Operate2
	CMP r2,r4				;Initialize
	BEQ YM2
	
	LDR r6,[r0]				;Load value
	LDR r7,[r0,-r5]			;Load value
	STMEA sp,{r0-r11}		;Store registers
	MOV r0,r7
	MOV r1,r6
	CMP r0,#0x00000000		;If r0 == 0
	CMPNE r0,#0x80000000
	MOVEQ r12,#0x00000000	;r12 = 0
	MOVNE lr,pc
	BNE DIV_Set				;DIV_Set function
	LDMFD sp,{r0-r11}
	MOV r8,r12
	CMP r8,#0x00000000		;Compare r8,0
	ADDNE r8,#0x80000000	;If r8 != 0, change sign bit
	ADD r4,#1				;Initialize
	STMFD sp,{r4}			;Store register
	MOV r4, #0
	
Next_Column2
	SUB r5,r4,LSL #2		;Initialize
	LDR r6,[r1,r4,LSL #2]	;Load value
	LDR r7,[r1,-r5]			;Load value
	STMEA sp,{r0-r11}		;Store registers	
	MOV r0,r8
	MOV r1,r6
	MOV lr,pc
	B Multiplication		;Multiplication function
	LDMFD sp,{r0-r11}		;Load registers
	MOV r9,r12				;r9 = result
	
	STMEA sp,{r0-r11}		;Store registers
	MOV r0,r9
	MOV r1,r7
	MOV lr,pc
	B ADDSUB				;ADDSUB function
	LDMFD sp,{r0-r11}		;Load registers
	MOV r10,r12				;r10 = result
	STR r10,[r1,-r5]		;Store r10 into address
	
	ADD r5,r4,LSL #2		;Initialize
	ADD r3,#1
	ADD r4,#1
	CMP r3,r2
	BNE Next_Column2		;Restart
	BEQ N_Oper2				;Go next
	
Program_Finish
	MOV pc,#0		;Program end
	
YM						;Change value to appropriate operation
	ADD r11,#1			
	MOV r4,r11
	SUB r3,r11,#1
	MOV r5,r2, LSL #2
	B Next_Row
	
YM2						;Change value to appropriate operation
	SUB r11,#1
	SUB r4,r2,r11
	ADD r4,#1
	MOV r3,#0
	MOV r5,r2, LSL #2
	B Next_Row2
	
N_Oper					;Change value to appropriate operation
	SUB r3,r11,#1
	ADD r5,r2,LSL #2
	LDMEA sp,{r4}
	B Operate
	
N_Oper2					;Change value to appropriate operation
	MOV r3,#0
	ADD r5,r2,LSL #2
	LDMEA sp,{r4}
	B Operate2
	
Set_Column_R0
	CMP r11,r2					;Finish condition
	BEQ Set_Column_R1
	
	LDR r6,[r0,r7,LSL #2]		;Load value
	STMEA sp,{r0-r11}			;Store registers
	MOV r0,r8
	MOV r1,r6
	MOV lr,pc
	B Multiplication			;Multiplication function
	LDMFD sp,{r0-r11}			;Load registers
	MOV r9,r12					;r9 = result
	STR r9,[r0,r7,LSL #2]		;Store r9 into address
	ADD r11,#1					;Initialize
	ADD r7,#1
	B Set_Column_R0				;Restart
	

DIV_Set
	MOV r2,r0,LSR #31	;sign bit
	MOV r3,r1,LSR #31
	
	MOV r4,r0,LSL #1	;exponent
	MOV r4,r4,LSR #24
	MOV r5,r1,LSL #1
	MOV r5,r5,LSR #24
	
	MOV r6,r0,LSL #9	;mentissa
	MOV r7,r1,LSL #9
	MOV r8,#0x00800000
	ADD r6,r8,r6,LSR #9
	ADD r7,r8,r7,LSR #9
	
	CMP r2,r3			;result sign bit
	MOVEQ r2,#0
	MOVNE r2,#0x80000000
	
	SUB r4,r4,r5			;result exponent
	ADD r4,r4,#127
	MOV r3,#0
	MOV r6,r6,LSL #8
	MOV r7,r7,LSL #8
	MOV r10,#0
	MOV r11,#0x80000000
Division
	CMP r10,#24
	BEQ DIV_Normalize		;if repeated 24, Finish
	CMP r6,r7				;Compare r6,r7
	SUBPL r6,r7				;if r6 >= r7, r6 = r6 - r7
	ADDPL r3,r11,LSR r10	;Store result
	MOV r7,r7,LSR #1		;1 bit shift right
	CMP r6, #0				;Compare r6,#0
	BEQ DIV_Normalize		;Finish
	ADD r10,#1				;Initialize
	B Division				;Restart
	
DIV_Normalize
	CMP r3,#0x80000000		;Check to move dot
	SUBMI r4,#1				; Add 1 to result exponent
	MOVMI r3,r3,LSL #1		; remove in front of dot
	SUB r3,r3,#0x80000000	; else, shift two 
	MOV r3,r3,LSR #8
	
	ADD r12,r2,r4,LSL #23	;r12 = sign bit + exponent bits
	ADD r12,r3				;r12 = r12 + mantissa bits
	MOV pc,lr
	
Multiplication			; radix 4
	CMP r0,#0x00000000		;If r0 == 0, return 0
	CMPNE r0,#0x80000000
	MOVEQ r12,#0x00000000
	MOVEQ pc,lr
	
	CMP r1,#0x00000000		;If r1 == 0, return 0
	CMPNE r1,#0x80000000
	MOVEQ r12,#0x00000000
	MOVEQ pc,lr
	
	MOV r2,r0,LSR #31	;sign bit
	MOV r3,r1,LSR #31
	
	MOV r4,r0,LSL #1	;exponent
	MOV r4,r4,LSR #24
	MOV r5,r1,LSL #1
	MOV r5,r5,LSR #24
	
	MOV r6,r0,LSL #9	;mentissa
	MOV r7,r1,LSL #9
	MOV r8,0x00800000
	ADD r6,r8,r6,LSR #9
	ADD r7,r8,r7,LSR #9
	
	CMP r2,r3			;result sign bit
	MOVEQ r2,#0
	MOVNE r2,#0x80000000
	
	ADD r4,r5			;result exponent
	SUB r4,r4,#127
	
	MOV r5,r7,LSL #1 		;Attach 0 to multiplier  25bit
	MOV r3,#0				;multiplier result register
Booth
	MOV r11,r5,LSL #29		; r11 is radix 4
	CMP r5,#0				; Find compare ended
	MOVEQ r3,r3,LSL #2		; If true, Shift 2
	BEQ MUL_Normalize		; Normalize
	MOV r5,r5,LSR #2 		; multiplier move
	CMP r11,#0				; radix  == 000
	MOVEQ r3,r3,ASR #2		; Shift two of result
	BEQ	Booth				; Move to Booth label

	CMP r11,#0x60000000		; Check radix (A, 2A)
	MOVLO r10,r6,LSL#7		; radix	== 001||010 r10 = A
	ADDLO r3,r3,r10,ASR#1	; r3 = r3 + r10
	ADDEQ r3,r3,r6,LSL#7 	; radix == 011	 r3 = r3 + 2A
	MOVLS r3,r3,ASR #2		; Shift result to right two bits
	BLS	Booth				; Move to Booth label
	
	CMP r11,#0x80000000		; Check -2A
	SUBEQ r3,r3,r6,LSL#7	; radix == 100  r2 = r2-2A
	MOVEQ r3,r3,ASR #2		; Shift result to right two bits
	BEQ	Booth				; Move to Booth label
	
	CMP r11,#0xE0000000		; Check -A
	MOVLO r10,r6,LSL#7		; r10 = A
	SUBLO r3,r3,r10,ASR#1	; radix == 101 || 110  r2 = r2-A
	MOV r3,r3,ASR #2		; Shift result to right two bits
	B Booth					; Move to Booth label
	
MUL_Normalize				; Normalize
	MOV r3,r3,LSL#2			; Delete two bits from the first
	CMP r3,#0x80000000		; Check dot should be moved
	ADDPL r4,#1				; Add exponent 1
	MOVPL r3,r3,LSL #1		; Remove 1 in front of dot
	MOVMI r3,r3,LSL #2		; else, delete in front of dot using LSL 2
	
	ADD r12,r2,r4,LSL #23	; Attach sign bits and exponent bits
	ADD r12,r3,LSR#9		; Attach whole result
	MOV pc,lr
	
ADDSUB
	CMP r0,#0x00000000		;If r0 == r1 == 0, return 0
	CMPEQ r1,#0x00000000
	MOVEQ r12,#0x00000000
	MOVEQ pc,lr
	
	MOV r2,r0,LSR #31	;sign bit
	MOV r3,r1,LSR #31
	
	MOV r4,r0,LSL #1	;exponent
	MOV r4,r4,LSR #24
	MOV r5,r1,LSL #1
	MOV r5,r5,LSR #24
	
	MOV r6,r0,LSL #9			;mentissa
	MOV r7,r1,LSL #9
	MOV r8,#0x00800000
	ADD r6,r8,r6,LSR #9
	ADD r7,r8,r7,LSR #9
	
	SUBS r8, r4, r5				 ; compare exponents and set CPSR
	RSBMI r8, r8, #0			 ; if result is negative value, change it positive value
	MOVMI r6, r6, LSR r8		; shift mantissa
	MOVMI r10, r5				 ; set result's exponent
	MOVPL r7, r7, LSR r8		 ; shift mantissa
	MOVPL r10, r4 				; set result's exponent

    CMP r2, r3					 ; compare r2, r3 and set CPSR
	ADDEQ r11, r6, r7 			; if same, add mantissa
	MOVEQ r9, r2, LSL #31		 ; set result's sign bit
	BEQ ADDSUB_Normalize 		; goto Normalize	   
	CMP r6,r7					;compare r6,r7
	MOVEQ r9,r2					;if r6 == r7, r9 = r2
	BEQ Equal					;Move Equal branch
	SUBS r11,r6,r7				;r6 - r7 and Set CPSR
	RSBMI r11,r11,#0			;Turn to Absolute value
	MOVPL r9,r2,LSL#31			;if r6 >= r7
	MOVMI r9,r3,LSL#31			;else if r6 < r7
	B ADDSUB_Normalize			;Move Normalize
	   
ADDSUB_Normalize
    CMP r11, #0x01000000		 ; compare R11 and 0x01000000 for normalize
	BPL Big 					; if same or large, goto Big
	BMI Small 					; else goto Small
	 
Big
	ADD r10, r10, #1			 ; R10 = R10 + 1
	MOV r11, r11, LSR #1 		; shift R11 to right
	CMP r11, #0x01000000		 ; compare R10 and 0x01000000 
	BPL Big 					; if same or larger goto Big
	BMI Final 					; else goto Assemble
	  
Small
	CMP r11, #0x00800000		 ; compare R11 and 0x00800000
	SUBMI r10, r10, #1 			; R10 = R10 - 1
	MOVMI r11, r11, LSL #1		 ; shift R11 to left
	BMI Small					 ; if R11 is small than 0x00800000, goto Small
	BPL Final
Equal
	LSL r9,#23					;LSL r9 23bits
	CMP r9,#0x00800000			;Compare r9, 0x00800000
	SUBPL r9,#0x00800000		;If r9 >= 0x00800000, Subtract
	MOV r12,r9					;r12 = result 
	MOV pc,lr
Final
	SUB r11, r11, #0x00800000 	; calculate fraction
	ADD r12, r11, r10, LSL #23 	; concatenate exponent and fraction
	ADD r12, r12, r9 			; concatenate sign bit and else
	MOV pc,lr
	
Result_data & &60000000			;Result(Inverse matrix) address

Matrix_data						;Input matrix
	DCD 20
	DCD 2_01000001101000000000000000000000
	DCD 2_01000011011100000000000000000000
	DCD 2_01000001001001000000000000000000
	DCD 2_01000010010000000000000000000000
	DCD 2_01000001111100000000000000000000
	DCD 2_01000000000001000000000000000000
	DCD 2_01000000010100000000000000000000
	DCD 2_11000001100111000000000000000000
	DCD 2_01000011000110000000000000000000
	DCD 2_11000001101000000000000000000000
	DCD 2_01000011000000100000000000000000
	DCD 2_11000001001010000000000000000000
	DCD 2_01000001100100000000000000000000
	DCD 2_11000000110110000000000000000000
	DCD 2_11000010100101000000000000000000
	DCD 2_01000100010010000000000000000000
	DCD 2_11000000111010000000000000000000
	DCD 2_11000001101100000000000000000000
	DCD 2_11000100000111000000000000000000
	DCD 2_11000001010010000000000000000000
	DCD 2_01000011010001000000000000000000
	DCD 2_01000000001110000000000000000000
	DCD 2_01000011010010000000000000000000
	DCD 2_01000011001000000000000000000000
	DCD 2_11000011010110000000000000000000
	DCD 2_11000000010100000000000000000000
	DCD 2_11000100001101000000000000000000
	DCD 2_01000000111101000000000000000000
	DCD 2_11000011011011000000000000000000
	DCD 2_01000011010110000000000000000000
	DCD 2_01000010111010000000000000000000
	DCD 2_01000001110010000000000000000000
	DCD 2_01000011010111000000000000000000
	DCD 2_11000001101110000000000000000000
	DCD 2_11000100001110000000000000000000
	DCD 2_01000010111110000000000000000000
	DCD 2_01000000000101000000000000000000
	DCD 2_01000010001100000000000000000000
	DCD 2_01000001101000000000000000000000
	DCD 2_11000010000110000000000000000000
	DCD 2_11000001011000000000000000000000
	DCD 2_01000010110101000000000000000000
	DCD 2_11000011010110000000000000000000
	DCD 2_01000011111010000000000000000000
	DCD 2_01000100011010000000000000000000
	DCD 2_11000011111100000000000000000000
	DCD 2_11000000110100000000000000000000
	DCD 2_11000011100011000000000000000000
	DCD 2_01000000101001000000000000000000
	DCD 2_11000011110100000000000000000000
	DCD 2_11000010111110000000000000000000
	DCD 2_11000010101001000000000000000000
	DCD 2_01000011011110000000000000000000
	DCD 2_11000001101100000000000000000000
	DCD 2_11000011000110000000000000000000
	DCD 2_01000011110101000000000000000000
	DCD 2_01000010010101000000000000000000
	DCD 2_11000000100000000000000000000000
	DCD 2_11000000010001000000000000000000
	DCD 2_11000000100001000000000000000000
	DCD 2_01000011000101000000000000000000
	DCD 2_01000011011100000000000000000000
	DCD 2_01000000001110000000000000000000
	DCD 2_01000000010010000000000000000000
	DCD 2_11000010010010000000000000000000
	DCD 2_11000000011110000000000000000000
	DCD 2_11000011111110000000000000000000
	DCD 2_01000001000000100000000000000000
	DCD 2_01000010100111000000000000000000
	DCD 2_01000001000100000000000000000000
	DCD 2_11000000111000000000000000000000
	DCD 2_01000010101010000000000000000000
	DCD 2_11000100000011000000000000000000
	DCD 2_01000010110101000000000000000000
	DCD 2_11000100010100000000000000000000
	DCD 2_01000010000000000000000000000000
	DCD 2_01000010000101000000000000000000
	DCD 2_11000000110000000000000000000000
	DCD 2_01000011001111000000000000000000
	DCD 2_01000000100001000000000000000000
	DCD 2_11000001110100000000000000000000
	DCD 2_11000010001100000000000000000000
	DCD 2_01000000111100000000000000000000
	DCD 2_01000000101000000000000000000000
	DCD 2_01000010000111000000000000000000
	DCD 2_01000000111101000000000000000000
	DCD 2_01000011000101000000000000000000
	DCD 2_11000100010100000000000000000000
	DCD 2_01000010011100000000000000000000
	DCD 2_01000001001000000000000000000000
	DCD 2_11000001000001000000000000000000
	DCD 2_11000011000011000000000000000000
	DCD 2_01000001011101000000000000000000
	DCD 2_11000001110011000000000000000000
	DCD 2_01000001101100000000000000000000
	DCD 2_11000001000111000000000000000000
	DCD 2_01000001000010000000000000000000
	DCD 2_11000000010110000000000000000000
	DCD 2_11000011001000000000000000000000
	DCD 2_11000100001100000000000000000000
	DCD 2_11000011110110000000000000000000
	DCD 2_01000010010110000000000000000000
	DCD 2_01000100001010000000000000000000
	DCD 2_01000011111100000000000000000000
	DCD 2_01000000010111000000000000000000
	DCD 2_01000010111000000000000000000000
	DCD 2_01000001100000000000000000000000
	DCD 2_11000001001011000000000000000000
	DCD 2_11000011101100000000000000000000
	DCD 2_11000100010001000000000000000000
	DCD 2_01000010110110000000000000000000
	DCD 2_01000001101100000000000000000000
	DCD 2_11000001011001000000000000000000
	DCD 2_11000000011100000000000000000000
	DCD 2_11000000000010000000000000000000
	DCD 2_11000000000001000000000000000000
	DCD 2_01000011100100000000000000000000
	DCD 2_01000000010000000000000000000000
	DCD 2_01000010111110000000000000000000
	DCD 2_01000000110001000000000000000000
	DCD 2_01000100010000000000000000000000
	DCD 2_11000100001100000000000000000000
	DCD 2_11000001111100000000000000000000
	DCD 2_01000100010000000000000000000000
	DCD 2_11000011000000000000000000000000
	DCD 2_11000000111100000000000000000000
	DCD 2_11000001111000000000000000000000
	DCD 2_11000000111100000000000000000000
	DCD 2_11000000000001000000000000000000
	DCD 2_01000010111011000000000000000000
	DCD 2_11000001010101000000000000000000
	DCD 2_01000001000000100000000000000000
	DCD 2_01000001000000000000000000000000
	DCD 2_01000001010100000000000000000000
	DCD 2_11000010001110000000000000000000
	DCD 2_11000100011010000000000000000000
	DCD 2_01000001101000000000000000000000
	DCD 2_11000011100000000000000000000000
	DCD 2_01000001000001000000000000000000
	DCD 2_01000100000110000000000000000000
	DCD 2_01000000101110000000000000000000
	DCD 2_01000010001001000000000000000000
	DCD 2_11000011010110000000000000000000
	DCD 2_01000010101000000000000000000000
	DCD 2_11000000110010000000000000000000
	DCD 2_11000100011100000000000000000000
	DCD 2_01000001101101000000000000000000
	DCD 2_11000011000001000000000000000000
	DCD 2_01000011011000000000000000000000
	DCD 2_01000000111100000000000000000000
	DCD 2_01000100000000100000000000000000
	DCD 2_11000100011000000000000000000000
	DCD 2_01000000111011000000000000000000
	DCD 2_11000001011011000000000000000000
	DCD 2_11000001110111000000000000000000
	DCD 2_11000011111010000000000000000000
	DCD 2_11000000000000000000000000000000
	DCD 2_11000001011101000000000000000000
	DCD 2_11000011010110000000000000000000
	DCD 2_01000010111000000000000000000000
	DCD 2_11000000100001000000000000000000
	DCD 2_01000011100010000000000000000000
	DCD 2_01000000110100000000000000000000
	DCD 2_11000001110111000000000000000000
	DCD 2_11000010111000000000000000000000
	DCD 2_01000011101110000000000000000000
	DCD 2_11000000111110000000000000000000
	DCD 2_11000100000101000000000000000000
	DCD 2_01000001010100000000000000000000
	DCD 2_11000000010010000000000000000000
	DCD 2_11000001000000100000000000000000
	DCD 2_01000001000110000000000000000000
	DCD 2_01000000100100000000000000000000
	DCD 2_11000011010111000000000000000000
	DCD 2_01000000011010000000000000000000
	DCD 2_11000100010010000000000000000000
	DCD 2_01000010111110000000000000000000
	DCD 2_11000011001010000000000000000000
	DCD 2_11000100000001000000000000000000
	DCD 2_01000001001100000000000000000000
	DCD 2_01000011111111000000000000000000
	DCD 2_01000000010100000000000000000000
	DCD 2_01000000011011000000000000000000
	DCD 2_11000100010001000000000000000000
	DCD 2_11000010010010000000000000000000
	DCD 2_01000100000000000000000000000000
	DCD 2_11000011000111000000000000000000
	DCD 2_01000010101100000000000000000000
	DCD 2_01000011110000000000000000000000
	DCD 2_11000100010000000000000000000000
	DCD 2_11000001001001000000000000000000
	DCD 2_11000010100010000000000000000000
	DCD 2_01000010111100000000000000000000
	DCD 2_11000000000001000000000000000000
	DCD 2_11000100000011000000000000000000
	DCD 2_01000000011100000000000000000000
	DCD 2_11000001011001000000000000000000
	DCD 2_11000001101110000000000000000000
	DCD 2_01000000011010000000000000000000
	DCD 2_01000010100011000000000000000000
	DCD 2_11000001111100000000000000000000
	DCD 2_11000010100100000000000000000000
	DCD 2_11000011011100000000000000000000
	DCD 2_11000000000000000000000000000000
	DCD 2_01000001010100000000000000000000
	DCD 2_01000011001001000000000000000000
	DCD 2_11000001010110000000000000000000
	DCD 2_01000100000010000000000000000000
	DCD 2_01000000111110000000000000000000
	DCD 2_11000010011010000000000000000000
	DCD 2_01000011110000000000000000000000
	DCD 2_01000100011000000000000000000000
	DCD 2_11000001110000000000000000000000
	DCD 2_01000001001110000000000000000000
	DCD 2_01000001011110000000000000000000
	DCD 2_01000011011001000000000000000000
	DCD 2_01000001100010000000000000000000
	DCD 2_11000100001010000000000000000000
	DCD 2_11000010110001000000000000000000
	DCD 2_11000001010000000000000000000000
	DCD 2_01000000111010000000000000000000
	DCD 2_11000011011011000000000000000000
	DCD 2_01000010001000000000000000000000
	DCD 2_01000001010011000000000000000000
	DCD 2_01000011001000000000000000000000
	DCD 2_01000010100000000000000000000000
	DCD 2_11000010010010000000000000000000
	DCD 2_11000010001000000000000000000000
	DCD 2_11000001011010000000000000000000
	DCD 2_01000000011110000000000000000000
	DCD 2_01000000111000000000000000000000
	DCD 2_01000000001010000000000000000000
	DCD 2_01000001010110000000000000000000
	DCD 2_11000010011100000000000000000000
	DCD 2_01000010011001000000000000000000
	DCD 2_01000001100100000000000000000000
	DCD 2_11000000011111000000000000000000
	DCD 2_11000001100010000000000000000000
	DCD 2_01000100011000000000000000000000
	DCD 2_01000011100011000000000000000000
	DCD 2_01000100010100000000000000000000
	DCD 2_01000001100100000000000000000000
	DCD 2_11000011000100000000000000000000
	DCD 2_11000011001000000000000000000000
	DCD 2_01000100011100000000000000000000
	DCD 2_11000001001111000000000000000000
	DCD 2_11000100001100000000000000000000
	DCD 2_01000000110111000000000000000000
	DCD 2_01000100000011000000000000000000
	DCD 2_11000000101111000000000000000000
	DCD 2_11000001000000000000000000000000
	DCD 2_11000010111011000000000000000000
	DCD 2_01000001100001000000000000000000
	DCD 2_01000011000001000000000000000000
	DCD 2_11000001011100000000000000000000
	DCD 2_11000010001111000000000000000000
	DCD 2_01000010111111000000000000000000
	DCD 2_01000011000000000000000000000000
	DCD 2_11000000000000000000000000000000
	DCD 2_01000001100010000000000000000000
	DCD 2_11000100011000000000000000000000
	DCD 2_01000000100000000000000000000000
	DCD 2_11000001100000000000000000000000
	DCD 2_11000011101111000000000000000000
	DCD 2_11000010110100000000000000000000
	DCD 2_01000000111110000000000000000000
	DCD 2_01000011110011000000000000000000
	DCD 2_01000010100010000000000000000000
	DCD 2_01000100000000000000000000000000
	DCD 2_01000000010010000000000000000000
	DCD 2_11000010011011000000000000000000
	DCD 2_11000011101100000000000000000000
	DCD 2_11000011111101000000000000000000
	DCD 2_01000001101001000000000000000000
	DCD 2_01000011110100000000000000000000
	DCD 2_01000001001101000000000000000000
	DCD 2_01000010100010000000000000000000
	DCD 2_01000000111100000000000000000000
	DCD 2_11000001101000000000000000000000
	DCD 2_11000010001100000000000000000000
	DCD 2_01000010001010000000000000000000
	DCD 2_11000001100010000000000000000000
	DCD 2_01000000110100000000000000000000
	DCD 2_11000001101100000000000000000000
	DCD 2_01000010001110000000000000000000
	DCD 2_01000001001010000000000000000000
	DCD 2_11000001001000000000000000000000
	DCD 2_11000010011010000000000000000000
	DCD 2_11000010111100000000000000000000
	DCD 2_11000001100000000000000000000000
	DCD 2_01000011110011000000000000000000
	DCD 2_01000000000101000000000000000000
	DCD 2_11000000011011000000000000000000
	DCD 2_11000010010111000000000000000000
	DCD 2_11000001011101000000000000000000
	DCD 2_11000000101000000000000000000000
	DCD 2_01000011011000000000000000000000
	DCD 2_01000000100010000000000000000000
	DCD 2_11000001100001000000000000000000
	DCD 2_11000000100001000000000000000000
	DCD 2_11000010110011000000000000000000
	DCD 2_11000010010001000000000000000000
	DCD 2_11000000101000000000000000000000
	DCD 2_11000000101000000000000000000000
	DCD 2_11000011010101000000000000000000
	DCD 2_11000001101000000000000000000000
	DCD 2_01000011100010000000000000000000
	DCD 2_01000001010110000000000000000000
	DCD 2_11000000000100000000000000000000
	DCD 2_11000011111110000000000000000000
	DCD 2_11000000000000000000000000000000
	DCD 2_11000100000010000000000000000000
	DCD 2_11000010111100000000000000000000
	DCD 2_01000001110100000000000000000000
	DCD 2_11000010010001000000000000000000
	DCD 2_11000000011000000000000000000000
	DCD 2_01000000001000000000000000000000
	DCD 2_01000011010110000000000000000000
	DCD 2_01000001100101000000000000000000
	DCD 2_11000000100010000000000000000000
	DCD 2_11000011001000000000000000000000
	DCD 2_01000000001110000000000000000000
	DCD 2_01000000011010000000000000000000
	DCD 2_01000100000000000000000000000000
	DCD 2_01000000011110000000000000000000
	DCD 2_01000011101001000000000000000000
	DCD 2_01000010001100000000000000000000
	DCD 2_01000010100000000000000000000000
	DCD 2_01000010010100000000000000000000
	DCD 2_01000001001010000000000000000000
	DCD 2_11000011110100000000000000000000
	DCD 2_01000001110110000000000000000000
	DCD 2_11000000110011000000000000000000
	DCD 2_01000000001010000000000000000000
	DCD 2_01000011101000000000000000000000
	DCD 2_01000000110010000000000000000000
	DCD 2_01000010101100000000000000000000
	DCD 2_01000010000110000000000000000000
	DCD 2_11000011101000000000000000000000
	DCD 2_01000010010111000000000000000000
	DCD 2_11000001100010000000000000000000
	DCD 2_11000000111000000000000000000000
	DCD 2_01000001110010000000000000000000
	DCD 2_11000011011000000000000000000000
	DCD 2_11000001101100000000000000000000
	DCD 2_11000001110010000000000000000000
	DCD 2_01000010010000000000000000000000
	DCD 2_01000000011111000000000000000000
	DCD 2_11000001000000100000000000000000
	DCD 2_11000001010011000000000000000000
	DCD 2_11000000101110000000000000000000
	DCD 2_11000011011001000000000000000000
	DCD 2_01000001000101000000000000000000
	DCD 2_11000100000000000000000000000000
	DCD 2_01000010101110000000000000000000
	DCD 2_11000010010000000000000000000000
	DCD 2_11000011100101000000000000000000
	DCD 2_01000011000000000000000000000000
	DCD 2_01000010000000000000000000000000
	DCD 2_11000010010100000000000000000000
	DCD 2_11000000111000000000000000000000
	DCD 2_11000100000000000000000000000000
	DCD 2_01000010000000000000000000000000
	DCD 2_11000001100110000000000000000000
	DCD 2_01000011011010000000000000000000
	DCD 2_11000010000010000000000000000000
	DCD 2_11000010010100000000000000000000
	DCD 2_11000000000010000000000000000000
	DCD 2_01000010111110000000000000000000
	DCD 2_11000001111000000000000000000000
	DCD 2_01000001100101000000000000000000
	DCD 2_11000010101010000000000000000000
	DCD 2_11000000000000100000000000000000
	DCD 2_01000000011011000000000000000000
	DCD 2_01000001101000000000000000000000
	DCD 2_11000010100100000000000000000000
	DCD 2_01000000101010000000000000000000
	DCD 2_11000011011110000000000000000000
	DCD 2_11000010000001000000000000000000
	DCD 2_11000001001110000000000000000000
	DCD 2_11000001110001000000000000000000
	DCD 2_11000001110100000000000000000000
	DCD 2_11000001100110000000000000000000
	DCD 2_01000011011001000000000000000000
	DCD 2_01000010010000000000000000000000
	DCD 2_11000001000101000000000000000000
	DCD 2_01000000000000000000000000000000
	DCD 2_11000001110111000000000000000000
	DCD 2_01000010101000000000000000000000
	DCD 2_11000011110101000000000000000000
	DCD 2_01000000111111000000000000000000
	DCD 2_01000001000100000000000000000000
	DCD 2_01000011000100000000000000000000
	DCD 2_01000011001100000000000000000000
	DCD 2_01000100011110000000000000000000
	DCD 2_11000011011001000000000000000000
	DCD 2_01000000110101000000000000000000
	DCD 2_11000000001010000000000000000000
	DCD 2_01000001001100000000000000000000
	DCD 2_01000000110100000000000000000000

	END